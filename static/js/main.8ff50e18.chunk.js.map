{"version":3,"sources":["pages/create/create.component.jsx","redux/post/post.types.js","components/card/card.component.js","redux/post/post.actions.js","components/card-list/card-list.component.js","App.js","reportWebVitals.js","redux/post/post.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["connect","dispatch","addPosts","newPost","type","payload","openPanel","useState","isOpen","setIsOpen","title","body","userId","form","setForm","initializeIcons","closePanel","submitForm","a","console","log","JSON","stringify","ActionButton","className","iconProps","iconName","allowDisabledFocus","onClick","Panel","headerText","onDismiss","Stack","tokens","childrenGap","TextField","onChange","e","target","value","label","multiline","rows","horizontal","horizontalAlign","PrimaryButton","text","DefaultButton","PostActionTypes","deletePosts","id","post","postsFromRedux","FontIcon","postId","confirmAlert","message","buttons","state","posts","map","App","props","bind","fetch","then","response","json","postsFromApi","setPosts","this","setState","dir","Component","postListFromReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","postReducer","action","filter","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ff50e18.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ActionButton, initializeIcons } from '@fluentui/react'\r\nimport { Panel, PrimaryButton, DefaultButton, TextField, Stack } from 'office-ui-fabric-react'\r\nimport './create.styles.css'\r\n\r\nfunction CreatePage({ openPanel, addPosts }) {\r\n    let [isOpen, setIsOpen] = useState(openPanel)\r\n    let [form, setForm] = useState({\r\n        title: '',\r\n        body: '',\r\n        userId: 0\r\n    })\r\n    initializeIcons();\r\n\r\n    let closePanel = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    let submitForm = async () => {\r\n        setIsOpen(false)\r\n        addPosts({\r\n            title: form.title,\r\n            body: form.body,\r\n            userId: form.userId\r\n        })\r\n        console.log('form captured: ' + JSON.stringify(form))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ActionButton className='btn-panel' iconProps={{ iconName: 'Add' }} allowDisabledFocus\r\n                onClick={closePanel}>\r\n                Create post\r\n            </ActionButton>\r\n\r\n            <Panel isOpen={isOpen} headerText='Create new post' onDismiss={() => setIsOpen(false)}>\r\n                <Stack tokens={{ childrenGap: 20 }}>\r\n                    <TextField onChange={(e) => setForm({ ...form, title: e.target.value })} label='Title' />\r\n                    <TextField onChange={(e) => setForm({ ...form, body: e.target.value })} multiline rows=\"3\" label='Body:' />\r\n                    <TextField onChange={(e) => setForm({ ...form, userId: e.target.value })} label='User id:' />\r\n                    <Stack horizontal horizontalAlign=\"space-between\">\r\n                        <PrimaryButton text='Add Post' onClick={submitForm} />\r\n                        <DefaultButton text='Cancel' onClick={closePanel} />\r\n                    </Stack>\r\n                </Stack>\r\n            </Panel>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addPosts: newPost => dispatch({\r\n        type: 'ADD_POST',\r\n        payload: newPost\r\n    })\r\n})\r\nexport default connect(null, mapDispatchToProps)(CreatePage)","export const PostActionTypes = {\r\n    SET_POSTS: 'SET_POSTS',\r\n    ADD_POST: 'ADD_POST',\r\n    DELETE_POST: 'DELETE_POST'\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { initializeIcons } from '@fluentui/react'\r\nimport { FontIcon } from '@fluentui/react/lib/Icon';\r\n\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { deletePosts } from '../../redux/post/post.actions'\r\n\r\nimport './card.styles.css';\r\n\r\nconst Card = ({ post, deletePosts, postsFromRedux }) => {\r\n    initializeIcons();\r\n\r\n    function submit(postId) {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Are you sure to do this.',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => deletePosts(postId)\r\n                    // tryToDelete(postId)\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: null\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <h2 className='card-title'>{post.title}</h2>\r\n            <p className='card-desc'>{post.body}</p>\r\n            <span className='card-user'>Created by: {post.userId}</span>\r\n\r\n            <div className='container'>\r\n                <FontIcon aria-label=\"Delete\" iconName=\"Delete\" className='btn-delete' onClick={() => submit(post.id)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deletePosts: id => dispatch(deletePosts(id))\r\n})\r\nexport default connect(null, mapDispatchToProps)(Card)","import { PostActionTypes } from './post.types'\r\n\r\nexport const setPosts = posts => ({\r\n    type: PostActionTypes.SET_POSTS,\r\n    payload: posts\r\n})\r\n\r\nexport const addPosts = newPost => ({\r\n    type: PostActionTypes.ADD_POST,\r\n    payload: newPost\r\n})\r\n\r\nexport const deletePosts = id => ({\r\n    type: PostActionTypes.DELETE_POST,\r\n    payload: id\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Card from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = ({ postsFromRedux }) => {\r\n\r\n    return (\r\n        <div className='card-list'>\r\n            { postsFromRedux ?\r\n                postsFromRedux.map(post => (\r\n                    <Card key={post.id} post={post} />\r\n                ))\r\n                :\r\n                'Component is loading'\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    postsFromRedux: state.post.posts\r\n})\r\nexport default connect(mapStateToProps)(CardList);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport CreatePage from './pages/create/create.component'\nimport './App.css';\nimport 'office-ui-fabric-react/dist/css/fabric.css';\n\nimport CardList from './components/card-list/card-list.component'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isOpen: false\n    }\n    this.closePanel = this.closePanel.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => response.json())\n      .then(postsFromApi => {\n        this.props.setPosts(postsFromApi)\n      })\n\n  }\n  async closePanel() {\n    this.state.setState({\n      isOpen:\n        this.state.isOpen ? false : true\n    })\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return (\n      <div className='ms-Grid' dir='ltr'>\n        <div className='ms-Grid-row'>\n          <div className='ms-Grid-col ms-sm-1 ms-xl1'>\n            <CreatePage openPanel={isOpen} />\n          </div>\n          <div className='ms-Grid-col ms-sm11 ms-xl11 main-element'>\n            <CardList />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n\n  return { postListFromReducer: state.post.posts };\n}\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: posts => dispatch({\n    type: 'SET_POSTS',\n    payload: posts\n  })\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PostActionTypes } from './post.types'\r\n\r\nconst INITIAL_STATE = {\r\n    posts: null\r\n}\r\n\r\nconst postReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case PostActionTypes.SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case PostActionTypes.ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.payload, ...state.posts]\r\n            }\r\n        case PostActionTypes.DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((post) => post.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default postReducer;","import { combineReducers} from  'redux'\r\n\r\nimport postReducer from './post/post.reducer'\r\n\r\nexport default combineReducers({\r\n    post: postReducer\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}